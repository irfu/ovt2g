#!/bin/sh
# Script for OVT startup
# $Id: ovt.in,v 1.9 2009/10/26 22:40:41 yuri Exp $
# $Source: /stor/devel/ovt2g/bin/ovt.in,v $   
#

# java or jre v1.2.x or 1.3.x
# note that JAVA_HOME overrides JAVABIN
JAVABIN=@JAVABIN@
JAVA_LIBS_OS=@JAVA_LIBS_OS@

# set it to /path/to/your/vtk.jar
VTK_CLASSPATH=@VTK_CLASSPATH@

# directory which contains VTK libraries
VTK_LIBS=@VTK_LIBS@

##################################################################
# do not edit below this line
##################################################################

OVTVERSION=@ovtversion@

echo "Orbit Visualization Tool $OVTVERSION"
echo "Copyright (c) OVT Team, 2000-2009"
echo "-- System Info ----------------------------------------------------------------"

#
# Check VTK_LIBS
#
if [ ! -f "$VTK_LIBS/libvtkCommonJava@SHLIB_SUFFIX@" ]
then
  echo Error: VTK libraries not found in \'$VTK_LIBS\'. 
  echo Please edit bin/ovt and set VTK_LIBS
  exit 1
fi

#
# Check VTK_CLASSPATH
#
if [ -d "$VTK_CLASSPATH" ]
then
  if [ ! -f "$VTK_CLASSPATH/vtk/vtkActor.class" ]
  then
    echo Error: VTK classes not found in VTK_CLASSPATH=\'$VTK_CLASSPATH\'. 
    echo Please edit bin/ovt and set VTK_CLASSPATH
    exit 1
  fi
elif [ ! -x "$VTK_CLASSPATH" ]
then
  if [ ! -f "$VTK_CLASSPATH" ]
  then
    echo Error: VTK classes not found in VTK_CLASSPATH=\'$VTK_CLASSPATH\'. 
    echo Please edit bin/ovt and set VTK_CLASSPATH
    exit 1
  fi
fi


#
# Add VTK classes to classpath
#

if [ "$VTK_CLASSPATH" != "" ]
then
	echo "  VTK CLASSPATH = $VTK_CLASSPATH"
	if [ "$CLASSPATH" != "" ]
	then
		CLASSPATH=$VTK_CLASSPATH:$CLASSPATH
	else	
		CLASSPATH=$VTK_CLASSPATH
	fi
	export CLASSPATH
fi

#
# Add VTK libraries to @LD_LIBRARY_PATH@
#

if [ "$VTK_LIBS" != "" ]
then
	if [ "X$JAVA_LIBS_OS" != "X" ]
	then
		VTK_LIBS=$VTK_LIBS:$JAVA_LIBS_OS
	fi
	echo "  VTK LIBS DIR  = $VTK_LIBS"
	if [ "$@LD_LIBRARY_PATH@" != "" ]
	then
		@LD_LIBRARY_PATH@=$VTK_LIBS:$@LD_LIBRARY_PATH@
	else 
		@LD_LIBRARY_PATH@=$VTK_LIBS
	fi
	export @LD_LIBRARY_PATH@
fi


if [ "$OVT_HOME" = "" ] ; then
  ## resolve links - $0 may be a link to  home
  PRG=$0
  progname=`basename $0`
#  echo PRG=$0
#  echo progname=$progname 

  while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '.*/.*' > /dev/null; then
        PRG="$link"
    else
        PRG="`dirname $PRG`/$link"
    fi
  done
  
  # this is a resolved OVT_HOME
  OVT_HOME=`dirname "$PRG"`/..
  
  # absolutize OVT_HOME

  oldpwd=`pwd` ; cd ${OVT_HOME}; OVT_HOME=`pwd`; cd $oldpwd; unset oldpwd


  if [ -d ${OVT_HOME}/share/ovt-${OVTVERSION} ] ; then
      # this is an installed distribution =>
      # ovt is placed under ${prefix}/bin
      # libovt.so is placed under ${prefix}/lib
      # OVT_HOME no points to ${prefix}
      @LD_LIBRARY_PATH@=$OVT_HOME/lib:$@LD_LIBRARY_PATH@;	export @LD_LIBRARY_PATH@
      OVT_HOME=${OVT_HOME}/share/ovt-${OVTVERSION}

  elif [ -d ${OVT_HOME}/conf ] ; then
      # this is a development version
      # libovt.so is located in bin/../src
      @LD_LIBRARY_PATH@=$OVT_HOME/src:$@LD_LIBRARY_PATH@;	export @LD_LIBRARY_PATH@
  else
      echo "Guessed OVT_HOME from bin/ovt ${OVT_HOME} is invalid."
      echo "Please set OVT_HOME or edit bin/ovt"
      exit 1
  fi
fi     

echo "  OVT_HOME      = $OVT_HOME"

# set JAVABIN to JAVA_HOME/bin/java or jre
if [ ! -z "$JAVA_HOME" ]
then
  if [ -x "JAVABIN=$JAVA_HOME/bin/java" ] ; then
      JAVABIN=$JAVA_HOME/bin/java
  elif [ -x "JAVABIN=$JAVA_HOME/bin/jre" ] ; then
      JAVABIN=$JAVA_HOME/bin/jre
  else
      echo WARNING: JAVA_HOME is incorrect!
  fi
fi

# if $JAVABIN file doesn't exist - guess from path
if [ ! -x "$JAVABIN" ]
then
#  echo "Guessing java from PATH..."
  JAVABIN=`which java`
  if [ -z "$JAVABIN" ] ; then
    JAVABIN=`which jre`
  fi
fi

# if $JAVABIN file doesn't exist now - exit
if [ ! -x "$JAVABIN" ]
then
  echo "Cannot find JAVA. Please set JAVA_HOME or add JAVA to PATH or edit bin/ovt and set JAVABIN."
  exit 1
fi
  
JAVA_BINDIR=`dirname $JAVABIN`
JAVA_HOME=$JAVA_BINDIR/..
# absolutize JAVA_HOME
oldpwd=`pwd` ; cd ${JAVA_HOME}; JAVA_HOME=`pwd`; cd $oldpwd; unset oldpwd

echo "  JAVA_HOME     = $JAVA_HOME"
 
if [ "$JAVACMD" = "" ] ; then
   # it may be defined in env - including flags!!
   JAVACMD="$JAVABIN -mx300m"
fi   

if [ "$CLASSPATH" != "" ] ; then
   CLASSPATH=$OVT_HOME:$CLASSPATH
else	
   CLASSPATH=$OVT_HOME
fi

#
# add all .jar files in ${OVT_HOME}/lib/ to CLASSPATH
#
for i in ${OVT_HOME}/lib/*.jar ; do
  CLASSPATH=${CLASSPATH}:$i
done 

export CLASSPATH

echo "  CLASSPATH     = $CLASSPATH"
 
echo "-------------------------------------------------------------------------------"

if [ "$1" = "-test" ] ; then

	echo "Testing VTK."
	echo "Showing VTK window..."
	$JAVACMD ovt.test

elif [ "$1" = "-install" ] ; then

	echo "Creating OVT user directory..."
	if [ "$OVT_USER_HOME" = "" ] ; then
		echo "OVT_USER_HOME is not set. Set it or edit bin/ovt"
		exit 1
	fi
	if test -d $OVT_USER_HOME 
	then
		echo "OVT user directory '"$OVT_USER_HOME"' already exist."
		exit 1		
	else
		mkdir $OVT_USER_HOME
		cp -R $OVT_HOME/conf $OVT_USER_HOME
		cp -R $OVT_HOME/userdata $OVT_USER_HOME
		echo "Done."
	fi


elif [ "$1" = "" ] ; then

if [ "$OVT_USER_HOME" = "" ]
then
	OVT_USER_HOME=$HOME/ovt;	export OVT_USER_HOME
fi

# check if OVT_USER_HOME doesn't exist - install in this case
  if test -d $OVT_USER_HOME 
	then
		echo "  USER DIR      = $OVT_USER_HOME"
	else
		echo "Creating OVT user directory $OVT_USER_HOME ..."
		mkdir $OVT_USER_HOME
		cp -R $OVT_HOME/conf $OVT_USER_HOME
		cp -R $OVT_HOME/userdata $OVT_USER_HOME
		echo "Done."
	fi

  echo "Starting OVT2G ..."
  
  $JAVACMD -Dovt.home=$OVT_HOME -Dovt.user=$OVT_USER_HOME -Dovt.version=$OVTVERSION -Djava.library.path=$@LD_LIBRARY_PATH@ ovt.XYZWindow

else
	echo \nUsage:
	echo -test      test VTK
	echo -install   create OVT user directory
fi
